[{"path":"https://pablogguz.github.io/ebrdify/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ebrdify authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pablogguz.github.io/ebrdify/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pablo Garcia-Guzman. Author, maintainer.","code":""},{"path":"https://pablogguz.github.io/ebrdify/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Garcia-Guzman P (2024). ebrdify: handy set functions make data EBRD-friendly. R package version 0.0.0.9000, https://pablogguz.github.io/ebrdify/.","code":"@Manual{,   title = {ebrdify: A handy set of functions to make your data EBRD-friendly},   author = {Pablo Garcia-Guzman},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://pablogguz.github.io/ebrdify/}, }"},{"path":"https://pablogguz.github.io/ebrdify/index.html","id":"ebrdify-","dir":"","previous_headings":"","what":"A handy set of functions to make your data EBRD-friendly","title":"A handy set of functions to make your data EBRD-friendly","text":"set handy functions classify EBRD countries operation","code":""},{"path":"https://pablogguz.github.io/ebrdify/index.html","id":"r","dir":"","previous_headings":"","what":"R","title":"A handy set of functions to make your data EBRD-friendly","text":"","code":"# install.packages(\"pak\") pak::pak(\"pablogguz/ebrdify\")"},{"path":"https://pablogguz.github.io/ebrdify/index.html","id":"stata","dir":"","previous_headings":"","what":"Stata","title":"A handy set of functions to make your data EBRD-friendly","text":"Coming soon!","code":""},{"path":"https://pablogguz.github.io/ebrdify/reference/ebrdify.html","id":null,"dir":"Reference","previous_headings":"","what":"EBRD Country Classification — ebrdify","title":"EBRD Country Classification — ebrdify","text":"function classifies countries based EBRD status region.","code":""},{"path":"https://pablogguz.github.io/ebrdify/reference/ebrdify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EBRD Country Classification — ebrdify","text":"","code":"ebrdify(data = NULL, var, var_format = NULL)"},{"path":"https://pablogguz.github.io/ebrdify/reference/ebrdify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EBRD Country Classification — ebrdify","text":"data data frame containing variable classify, NULL using vector input. var string specifying name variable data contains country codes, vector country codes. var_format string specifying format country codes var. can \"country.name\", \"iso3c\", \"iso2c\". NULL, function attempt detect format.","code":""},{"path":"https://pablogguz.github.io/ebrdify/reference/ebrdify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EBRD Country Classification — ebrdify","text":"data frame two new variables: ebrd coo_group, prints unmatched entries.","code":""},{"path":"https://pablogguz.github.io/ebrdify/reference/ebrdify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EBRD Country Classification — ebrdify","text":"","code":"# Using a data frame data <- data.frame(country_code = c(\"KAZ\", \"CZE\", \"GRC\", \"ARM\", \"ALB\", \"EGY\", \"USA\", \"CAN\")) ebrdified_data <- ebrdify(data, \"country_code\", var_format = \"iso3c\") print(ebrdified_data) #>   country_code ebrd                          coo_group #> 1          KAZ    1                       Central Asia #> 2          CZE    1   Central Europe and Baltic States #> 3          GRC    1                             Greece #> 4          ARM    1    Eastern Europe and the Caucasus #> 5          ALB    1               South-eastern Europe #> 6          EGY    1 Southern and Eastern Mediterranean #> 7          USA    0                               <NA> #> 8          CAN    0                               <NA>  # Using a vector country_vector <- c(\"KAZ\", \"CZE\", \"GRC\", \"ARM\", \"ALB\", \"EGY\", \"USA\", \"CAN\") ebrdified_vector <- ebrdify(var = country_vector, var_format = \"iso3c\") print(ebrdified_vector) #>   ebrd                          coo_group #> 1    1                       Central Asia #> 2    1   Central Europe and Baltic States #> 3    1                             Greece #> 4    1    Eastern Europe and the Caucasus #> 5    1               South-eastern Europe #> 6    1 Southern and Eastern Mediterranean #> 7    0                               <NA> #> 8    0                               <NA>  # Using a data frame with fake country names data_fake_names <- data.frame(country_name = c(\"Kazakhstan\",                                                \"Czechia\",                                                \"Narnia\",                                                \"Armenia\",                                                \"Albania\",                                                \"Wakanda\",                                                \"United States\",                                                \"Canada\")) ebrdified_data_fake_names <- ebrdify(data_fake_names, \"country_name\") #> Warning: Some values were not matched unambiguously: Narnia, Wakanda #> The following entries could not be matched: Narnia, Wakanda print(ebrdified_data_fake_names) #>    country_name ebrd                        coo_group #> 1    Kazakhstan    1                     Central Asia #> 2       Czechia    1 Central Europe and Baltic States #> 3        Narnia    0                             <NA> #> 4       Armenia    1  Eastern Europe and the Caucasus #> 5       Albania    1             South-eastern Europe #> 6       Wakanda    0                             <NA> #> 7 United States    0                             <NA> #> 8        Canada    0                             <NA>"},{"path":"https://pablogguz.github.io/ebrdify/news/index.html","id":"ebrdify-v0009000","dir":"Changelog","previous_headings":"","what":"ebrdify v0.0.0.9000","title":"ebrdify v0.0.0.9000","text":"Initial release","code":""}]
